name: Publish package (pypi)

on:
  workflow_call:
    inputs:
      package-name:
        description: The name of the package
        default: ${{github.event.repository.name}}
        type: string
      environment-name:
        description: The name of the environment
        default: pypi
        type: string
      python-version:
        description: The Python version
        default: ${{vars.PYTHON_VERSION || '3.x'}}
        type: string
    secrets:
      # TODO: make optional when pypi/warehouse#11096 is fixed
      PYPI_API_TOKEN:
        description: An authentication token for pypi
        required: true

jobs:
  build_sdist:
    name: Build source dist
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Build sources
        run: |-
          pip install build wheel
          python -mbuild -n -s
      - name: Upload sources
        uses: actions/upload-artifact@v4
        with:
          name: dist-sources
          path: dist/*.tar.gz
          retention-days: 2

  build_wheels:
    name: Build wheel on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: pip
          python-version: ${{inputs.python-version}}
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16
        with:
          output-dir: dist
        env:
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_TEST_SKIP: "*arm64 *aarch64"
      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.whl
          name: dist-wheels-${{matrix.os}}
          retention-days: 2

  package:
    name: Publish Python package
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: ${{inputs.environment-name}}
      url: https://pypi.org/project/${{inputs.package-name}}/
    # permissions:
    #   id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true
      - name: Check build artifacts
        run: ls -l dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          password: ${{secrets.PYPI_API_TOKEN}}
